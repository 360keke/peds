package com.cn.v2.common.derbyMgr;

import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.omg.CORBA.SystemException;

public class InitDataBase {
	public static Map generCommand() {
		Map<String, String> commands = new HashMap<String, String>();
		String key = "";
		String sql = "";
		// 创建runparams 表key 参数标示，一个参数key =code ；列表参数 value 表示显示值
		key = "create_peds_runparams";
		sql = "drop table peds_runparams; create table peds_runparams(key varchar(50),code varchar(50),code varchar(50),value varchar(500),rsrv1 varchar(200),rsrv2 varchar(200))";
		//commands.put(key, sql);
		// 创建文件属性表
		key = "create_peds_files";
		sql = "drop table peds_files;create table peds_files(id int GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) primary key,path varchar(500),filename varchar(500),suffix varchar(50),"
				+ " length float,signature varchar(500),createtime varchar(50),updatetime varchar(50),"
				+ "rsrv1 varchar(100),rsrv2 varchar(100) ,encryptpwd varchar(500),encrypttype varchar(1),encryptfilename varchar(500),keywords varchar(500)" 
				+ " catalogId int pathmd5 varchar(500))";
		//commands.put(key, sql);
		// 创建文件分类表
		key = "create_peds_catalog";
		sql = "create table peds_catalog(id int GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) primary key,parentid int,name varchar(100),type int,rsrv1 varchar(100))";
		commands.put(key, sql);
		// 创建文件与分类关联表
		key = "create_peds_catalog_mapping";
		sql = "create table peds_catalog_mapping(id int GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) primary key,resid int,catalogid int)";
		//commands.put(key, sql);
		return commands;
		// 创建重复文件列表
	}

	public static void main(String[] args) throws SQLException, SystemException {
		Statement st = DerbyManager.open().createStatement();
		Map commMap = InitDataBase.generCommand();
		for (Iterator it = commMap.keySet().iterator(); it.hasNext();) {
			String key = (String) it.next();
			String[] sqls = ((String) commMap.get(key)).split(";");
			for (int i = 0; i < sqls.length; i++) {
				st.execute(sqls[i]);
			}
		}
		DerbyManager.closeDataBase();
	}
}
